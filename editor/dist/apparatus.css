@import "../node_modules/codemirror/lib/codemirror.css";
@import "../node_modules/codemirror/addon/hint/show-hint.css";
html,
body {
  margin: 0;
  overflow: hidden;
}
[contenteditable]:active,
[contenteditable]:focus,
button:active,
button:focus {
  outline: none;
}
[contenteditable] {
  cursor: text;
}
body {
  font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
  font-size: 12px;
  color: #333;
}
canvas {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
}
.CursorOverride * {
  cursor: inherit !important;
}
.DragHintContainer {
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 10;
}
.DragHintContainer .DragHint {
  position: absolute;
}
.CreatePanel {
  box-sizing: border-box;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 120px;
  background-color: #eee;
  border-right: 1px solid #ccc;
}
.Outline {
  box-sizing: border-box;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 50%;
  width: 400px;
  background-color: #fff;
  border-left: 1px solid #ccc;
}
.Inspector {
  box-sizing: border-box;
  position: absolute;
  right: 0;
  width: 400px;
  bottom: 0;
  height: 50%;
  background-color: #fff;
  border-left: 1px solid #ccc;
}
.Canvas {
  box-sizing: border-box;
  position: absolute;
  left: 120px;
  top: 24px;
  right: 400px;
  bottom: 0;
}
.Menubar {
  box-sizing: border-box;
  position: absolute;
  height: 24px;
  left: 120px;
  right: 400px;
  background-color: #eee;
  top: 0;
  border-bottom: 1px #ccc solid;
}
.Header {
  position: absolute;
  width: 100%;
  top: 0px;
  height: 18px;
  box-sizing: border-box;
  line-height: 16px;
  text-align: center;
  color: #666;
  text-shadow: 0px 1px 0px rgba(255,255,255,0.5);
  background-color: #eee;
  background-image: -webkit-linear-gradient(top, #fff, #ddd);
  background-image: linear-gradient(to bottom, #fff, #ddd);
  border-top: 1px solid #e6e6e6;
  border-bottom: 1px solid #d3d3d3;
}
.Scroller {
  position: absolute;
  width: 100%;
  top: 18px;
  bottom: 0px;
  overflow-y: auto;
  overflow-x: hidden;
}
.Menubar {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  padding: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.Menubar .MenubarItem {
  padding: 0 8px;
  cursor: pointer;
}
.Menubar .MenubarItem:hover {
  color: #09c;
}
.Menubar .MenubarItem.isDisabled {
  cursor: default;
  color: #aaa;
}
.Menubar .MenubarItem.isDisabled:hover {
  color: #aaa;
}
.Menubar .MenubarSeparator {
  width: 24px;
}
.Menubar .ToolbarRight {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  text-align: right;
}
.Thumbnail {
  width: 100%;
  height: 100%;
}
.CreatePanelItem {
  padding: 6px 6px 18px 6px;
  position: relative;
}
.CreatePanelItem .CreatePanelThumbnail {
  cursor: -webkit-grab;
  cursor: grab;
  position: relative;
  width: 108px;
  height: 108px;
  background-color: #fff;
  margin-bottom: 6px;
  box-shadow: 0px 1px 2px rgba(0,0,0,0.5);
}
.CreatePanelItem .CreatePanelItemEditButton {
  float: right;
  color: transparent;
  cursor: pointer;
}
.CreatePanelItem .CreatePanelItemRemoveButton {
  position: absolute;
  top: 7px;
  right: 7px;
  font-size: 16px;
  color: transparent;
  cursor: pointer;
}
.CreatePanelItem:hover .CreatePanelItemEditButton,
.CreatePanelItem:hover .CreatePanelItemRemoveButton {
  color: rgba(0,0,0,0.25);
}
.CreatePanelItem:hover .CreatePanelItemEditButton:hover,
.CreatePanelItem:hover .CreatePanelItemRemoveButton:hover {
  color: rgba(0,0,0,0.6);
}
.CreatePanelItem.isEditing .CreatePanelThumbnail {
  outline: 2px solid #09c;
}
.CreatePanelItem.isEditing .CreatePanelItemEditButton {
  color: #09c !important;
}
.CreatePanelAddItem {
  font-size: 18px;
  text-align: center;
}
.OutlineChildren {
  margin-left: 1.5em;
}
.OutlineItem.isHovered {
  background-color: #e0f8f2;
}
.OutlineItem.isActiveController {
  background-color: #f8e0e0;
}
.OutlineItem.isSelected {
  background-color: #e0f2f8;
}
.OutlineItem.isController .ElementRow {
  color: #c66;
}
.ElementRow {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0.175em 0;
}
.ElementRow .ElementRowDisclosure {
  width: 1.5em;
}
.ElementRow .ElementRowLabel {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}
.DisclosureTriangle {
  width: 0;
  height: 0;
  margin-top: 0.11em;
  margin-left: 0.134em;
  border-top: 0.5em solid transparent;
  border-bottom: 0.5em solid transparent;
  border-left: 0.866em solid #ccc;
  -webkit-transition: -webkit-transform 0.05s;
          transition: transform 0.05s;
}
.DisclosureTriangle.isExpanded {
  -webkit-transform: rotate(90deg);
      -ms-transform: rotate(90deg);
          transform: rotate(90deg);
}
.DisclosureTriangle.Hidden {
  display: none;
}
.OutlineDragging {
  position: fixed;
  z-index: 20;
  background-color: #fff;
  pointer-events: none;
  box-shadow: 0px 2px 6px rgba(0,0,0,0.5);
  opacity: 0.7;
}
.OutlinePlaceholder {
  background-color: #bbb;
  box-shadow: inset 0px 1px 3px rgba(0,0,0,0.5);
}
.InspectorList {
  padding: 0.5em;
}
.AttributesList {
  margin-left: 1.5em;
}
.ComponentSection {
  padding-bottom: 1.25em;
}
.ComponentSectionTitle {
  margin-left: 2.25em;
  color: #999;
}
.AttributeRow {
  padding: 0.175em 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.AttributeRow.isInherited {
  opacity: 0.5;
}
.AttributeRow.isGoingToChange .cm-number,
.AttributeRow.isGoingToChange .cm-operator {
  color: #c00;
}
.AttributeRow .AttributeRowControl {
  width: 1.5em;
  min-width: 1.5em;
  max-width: 1.5em;
}
.AttributeRow .AttributeRowLabel {
  width: 9em;
  min-width: 9em;
  max-width: 9em;
}
.AttributeRow .AttributeRowExpression {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}
.AttributeRow.isWrapped {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}
.AttributeRow.isWrapped .AttributeRowExpression {
  padding-left: 3.25em;
  width: 100%;
}
.AttributeRow .AttributeControl {
  width: 1em;
  height: 1em;
  border-radius: 1em;
  border: 1px solid transparent;
}
.AttributeRow .AttributeControl.isControllable {
  border-color: #c66;
}
.AttributeRow .AttributeControl.isImplicitlyControlled {
  background-color: rgba(204,102,102,0.4);
}
.AttributeRow .AttributeControl.isControlled {
  background-color: #c66;
}
.AddVariableRow {
  padding: 0.05em 0 0.175em 0;
  margin-left: 1.5em;
}
.AttributeLabel {
  margin-right: 0.5em;
  border-radius: 20px;
  padding: 0 0.75em;
  cursor: -webkit-grab;
  cursor: grab;
}
.AttributeLabel.Editing {
  cursor: text;
}
.AttributeLabel,
.ReferenceToken {
  font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
  color: #333;
  background-image: -webkit-linear-gradient(top, #f4f4f4, #e4e4e4);
  background-image: linear-gradient(to bottom, #f4f4f4, #e4e4e4);
}
.AttributeLabel.isHovered,
.ReferenceToken.isHovered {
  background-image: -webkit-linear-gradient(top, #bff2e5, #66e0c1);
  background-image: linear-gradient(to bottom, #bff2e5, #66e0c1);
}
.AttributeLabel.isGoingToChange,
.ReferenceToken.isGoingToChange {
  background-image: -webkit-linear-gradient(top, #f2bfbf, #e06666);
  background-image: linear-gradient(to bottom, #f2bfbf, #e06666);
}
.Expression {
  font-family: menlo, monospace;
}
.ExpressionValue {
  color: #ccc;
}
.ReferenceToken {
  border-radius: 20px;
  padding: 0 0.75em;
  white-space: nowrap;
}
.SpreadValue:before {
  content: "[";
  opacity: 0.5;
}
.SpreadValue:after {
  content: "]";
  opacity: 0.5;
}
.SpreadValueItem:not(:last-child):after {
  content: ", ";
  opacity: 0.5;
}
.EditableTextInline {
  display: inline;
  padding-right: 0.75em;
}
.CodeMirror {
  height: auto;
  background-color: transparent;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
}
.CodeMirror .CodeMirror-lines {
  padding: 0;
}
.CodeMirror pre {
  padding: 0;
}
.CodeMirror .CodeMirror-selected {
  opacity: 0;
}
.CodeMirror.CodeMirror-focused .CodeMirror-selected {
  opacity: 1;
}
.cm-number {
  cursor: ew-resize;
}
.CodeMirror-hints {
  font-family: inherit;
}
.AddButton {
  width: 2em;
  height: 1em;
  padding: 0;
  line-height: 1em;
  font-size: 1em;
  color: #777;
  font-family: verdana;
  font-weight: bold;
  text-shadow: 0 1px 0 rgba(255,255,255,0.5);
  background-color: #ddd;
  background-image: -webkit-linear-gradient(top, #eee, #ccc);
  background-image: linear-gradient(to bottom, #eee, #ccc);
  box-shadow: 0 2px 1px rgba(0,0,0,0.16), 0 0 1px rgba(0,0,0,0.5), inset 0 1px 0 rgba(255,255,255,0.55);
  border-radius: 20px;
  border: 0px;
}
.AddButton:before {
  content: "+";
}
.AddButton:hover {
  background-image: -webkit-linear-gradient(top, #f3f3f3, #d3d3d3);
  background-image: linear-gradient(to bottom, #f3f3f3, #d3d3d3);
}
.AddButton:active {
  background-image: -webkit-linear-gradient(top, #cacaca, #d5d5d5);
  background-image: linear-gradient(to bottom, #cacaca, #d5d5d5);
  box-shadow: 0 1px 1px rgba(255,255,255,0.35), inset 0 0 1px rgba(0,0,0,0.5), inset 0 1px 4px rgba(0,0,0,0.4);
}
